1、ISCSI服务基础
	1）iscsi 磁盘的工作模式
		internet SCSI，网际SCSI接口
		一种基于C/S架构的虚拟机磁盘技术
		服务器提供磁盘空间，客户机连接并当成本地磁盘使用
		
	2）iscsi 磁盘的构成
		backstore，后端存储（真实的存储设备）
			对应到服务端提供实际存储空间的设备，需要起一个管理名称
		target，磁盘组（作为磁盘的框架包装）
			是客户端的访问目标，作为一个框架，由多个lun组成
		lun，逻辑单元（关联后端存储和磁盘组）
			每一个lun需要关联到某一个后端存储设备，在客户端会视为一块虚拟硬盘

	3）发布ISCSI磁盘，搭建服务端
		准备空闲存储：关闭虚拟机，添加一块新的硬盘，使用fdisk进行分区，大小给5G
		准备配置环境：安装 targetcli 软件包配置ISCSI服务端
				yum   -y  install   targetcli


2、配置 ISCSI 服务端
	1）使用 targetcli 命令建立配置
		基本交互操作：
			/backstore/block   create   后端存储名   实际设备路径		##建立真实的后端存储，相当于冰箱
			/iscsi  create   磁盘组的IQN名称				##创建磁盘组，相当于木质的箱子
			/iscsi/磁盘组名/tpg1/luns   create   后端存储路径			##将后端存储和磁盘组进行关联，相当于把冰箱放进木质的箱子，这个动作
			/iscsi/磁盘组名/tpg1/acls   create   客户端IQN标识			##客户端访问服务端iscsi服务时所携带的IQN名称标识
			/iscsi/磁盘组名/tpg1/portals   create  IP地址    端口号		##配置本机 iscsi 服务监控的IP和端口号 

		例子：      targetcli
			/backstores/block create dev=/dev/sdb1 name=nsd			##建立真实的后端存储
			/iscsi create iqn.2020-04.cn.tedu:server					##创建磁盘组
			/iscsi/iqn.2020-04.cn.tedu:server/tpg1/luns create /backstores/block/nsd	##将后端存储和磁盘组进行关联
			/iscsi/iqn.2020-04.cn.tedu:server/tpg1/acls create iqn.2020-04.cn.tedu:client	##客户端访问服务端iscsi服务时所携带的IQN名称标识
			/iscsi/iqn.2020-04.cn.tedu:server/tpg1/portals create 192.168.4.7 3260	##指定客户端访问的IP和端口号

			systemctl   restart  target
			systemctl   enable  target
			firewall-cmd  --set-default=trusted
			setenforce   0


			删除写错的配置：（删除原则：怎么配的怎么删，把create 换成delete）
				删除acls：/iscsi/iqn.2020-04.cn.tedu:server/tpg1/acls delete iqn.2020-04.cn.tedu:client
				删除luns:  /iscsi/iqn.2020-04.cn.tedu:server/tpg1/luns delete  lun=0
				删除磁盘组：/iscsi delete iqn.2020-04.cn.tedu:server
				删除后端存储：/backstores/block delete dev=/dev/sdb1 name=nsd	

			快速删除iscsi服务端配置：
				rm  -rf   /etc/target/saveconfig.json		##直接清空 iscsi 服务的的所有配置
				systemctl   restart  target   			##重启服务，刷新配置，一次不行多重启几次

		其他辅助命令：
			ls		##查看当前配置
			saveconfig	##保存当前配置
			exit		##退出并保存

	2）IQN名称规范
		格式：iqn.yyyy-mm.倒序域名:自定义标识
			IQN 用来识别 target 磁盘组，也用来识别客户机身份

		例子：iqn.yyyy-mm.cn.tedu:server
			iqn.yyyy-mm.cn.tedu:client


	3）启动 target 服务，检查配置结果
		systemctl  restart  target
		systemctl  enable  target
		targetcli  ls 

	4）整体思路
		防火墙默认区域设置为 trusted
		安装软件包 targetcli
			建立后端存储
			建立 target 磁盘组
			关联 lun
			设置 acl 访问控制，客户端声称的名字
			开启本机的IP地址和端口
		重启 target 服务，完成磁盘的共享

3、访问 iscsi 磁盘，配置客户端
	1）客户机配置IQN名称
		所需软件包：iscsi-initiator-utils
		修改：/etc/iscsi/initiatorname.iscsi
		后续再更改时，需重启服务 iscsid 以更新IQN标识
		vim  /etc/iscsi/initiatorname.iscsi
		InitiatorName=iqn.2020-04.cn.tedu:client
		:wq
		systemctl  restart   iscsid		##重载配置，刷新IQN标识

	2）连接、发现 iscsi 磁盘
		发现 iscsi 磁盘
			iscsiadm  --mode  discoverydb  --type  sendtargets  --portal  192.168.4.7   --discover
			参看man帮助：man   iscsiadm
				        /EXAMPLE
		连接 iscsi 磁盘
			systemctl  restart  iscsi
		
	3）搭建思路
		防火墙默认区域设置成trusted
		安装软件包 iscsi-initiator-utils
		修改配置文件/etc/iscsi/initiatorname.iscsi 客户端声称的名字
		重启 iscsid 服务刷新客户端的 iqn 标识
		书写客户端发现命令，参照man  iscsiadm
		重启 iscsi 服务，加载共享存储，最终利用lsblk查看新磁盘

		
		例子：
			yum -y install iscsi-initiator-utils			##安装客户端软件
 			vim /etc/iscsi/initiatorname.iscsi 			##修改客户端IQN标识
			InitiatorName=iqn.2020-04.cn.tedu:client		
			:wq
 			systemctl restart iscsid				##刷新IQN标识
			systemctl enable iscsid				##开机自启
			man iscsiadm
			iscsiadm --mode discoverydb --type sendtargets --portal 192.168.4.7 --discover	##发现iscsi共享磁盘
			lsblk
			systemctl restart iscsi				##连接磁盘
			systemctl enable iscsi				##开机自动
			lsblk						
 			fdisk /dev/sdb
  			lsblk
			mkfs.ext4 /dev/sdb1
			mkdir /mnt/sdb1
			mount /dev/sdb1 /mnt/sdb1/
			df


4、Web 基础应用
	1）Web 通信基本概念
		基于 B/S 架构的网页服务
		服务端提供网页
		浏览器下载并显示网页
		
		html：超文本标记语言
		http：超文本传输协议


	2）CentOS7 中的Web服务
		软件包：httpd
		系统服务：httpd
		提供的默认配置
			Listen：监听地址:端口（80）只能写一个			##调用配置文件可以写多个
			ServerName：本站点注册的DNS名称（空缺）		##调用配置文件中可以写多个
			DocumentRoot：网页根目录（/var/www/html）		##调用配置文件中可以写多个
			DirectoryIndex：起始页/首页文件名（index.html）		##只能写一个

		修改Listen：vim  /etc/httpd/conf/httpd.conf
			末行模式查找 /Listen
			Listen  8080
			:wq
			systemctl  restart  httpd

		修改DocumentRoot：vim  /etc/httpd/conf/httpd.conf
				末行模式查找 /DocumentRoot
				DocumentRoot   "/var/www/webapp"
				:wq
				systemctl  restart  httpd

		修改DirectoryIndex：vim  /etc/httpd/conf/httpd.conf
				末行模式查找 /DirectoryIndex
				DirectoryIndex   "abc.html"
				:wq
				systemctl  restart  httpd


			
	3）独立 Web 站点的快速部署
		装包
		配置（部署首页 index.html）
		起服务（httpd）
		
		yum  -y  install  httpd
		cd  /var/www/html/
		echo  "Default Site"  >  index.html
		systemctl  restart  httpd

	4）访问 Web 站点
		为浏览器程序提供 URL 网址
		URL：统一资源定位器
		协议名://服务器地址[:端口号]/目录/文件名

		curl  http://192.168.4.7
		firefox  http://192.168.4.7

5、Web 服务常用配置解析
	1）客户机地址限制
		使用 <Directory> </Directory>配置区段
			每个文件夹自动继承其父目录的ACL访问权限
			除非针对子目录有明确设置
			
		<Directory  目录的绝对路径>
			Require  all  denied|granted
			Require  ip  IP或网段地址
		</Directory>

	2）允许任何客户机访问
		<Directory  "/webapp">
			Require  all  granted
		</Directory>

	3）拒绝任何客户机访问
		<Directory  "/webapp/abc">
			Require  all  denied
		</Directory>	

	4）仅允许部分客户机访问
		<Directory  /var/www/html/private>
			Require  ip  192.168.4.207
		</Directory>
	
	5）仅拒绝部分客户机访问
		<Directory  "/webapp/abc">
			Deny  from  192.168.4.207
		</Directory>

	6）仅允许一个网段访问
		<Directory  /var/www/html/private>
			Require  ip  192.168.4.0/24
		</Directory>

	7）仅拒绝一个网段访问
		<Directory  "/webapp/abc">
			Deny  from  192.168.4.0/24
		</Directory>

	重启服务报错，使用命令查看报错： systemctl  status  httpd
				       journalctl  -xe

6、虚拟Web主机
	1）虚拟主机的含义及类型
		由一台服务器提供多个不同的Web站点
	
		区分方式：
			基于域名的虚拟主机
			基于端口的虚拟主机
			基于IP地址的虚拟主机
		
	2）配置一个虚拟站点
		配置文件路径
		/etc/httpd/conf/httpd.conf		##主配置文件
		/etc/httpd/conf.d/*.conf		##调用的额外配置文件

		为每个虚拟站点添加配置
			<VirtualHost  IP地址:端口>
				ServerName   此站点的域名
				DocumentRoot  此站点的网页根目录
			</VirtualHost>

			<VirtualHost  IP地址:端口>
				ServerName   此站点的域名
				DocumentRoot  此站点的网页根目录
			</VirtualHost>	
		
	3）对默认Web站点的影响
		一旦启用虚拟Web主机以后
			主配置文件中的 DocumentRoot、ServerName 会被忽略
			第1个虚拟站点被视为默认站点，若客户机请求的URL不属于任何已知站点，则由第一个站点响应
			
	4）注意事项：
		编写调用配置文件的时候，会根据文件名去判断优先级
		比如创建了: vim /etc/httpd/conf.d/00-default.conf
			  vim  /etc/httpd/conf.d/01-default.conf

			就会根据配置文件的名称进行判断，判断优先级

	5）课后练习配置：
		1、服务端添加虚拟web主机：
			vim  /etc/httpd/conf.d/nsd2002.conf
			<VirtualHost *:80>
      				  ServerName  server0.example.com
     				  DocumentRoot /var/www/server0
			</VirtualHost>
			<VirtualHost *:80>
        				ServerName  www0.example.com
        				DocumentRoot /var/www/www0
			</VirtualHost>
			<VirtualHost *:80>
        				ServerName  webapp0.example.com
        				DocumentRoot /var/www/webapp0
			</VirtualHost>
			<VirtualHost *:80>
        				ServerName  webapp.example.com
        				DocumentRoot /webapp
			</VirtualHost>
			:wq
			mkdir  /var/www/server0  /var/www/www0   /var/www/webapp0
			echo 大圣归来 > /var/www/server0/index.html
			echo 大圣又归来 > /var/www/www0/index.html
			echo 大圣累了 > /var/www/webapp0/index.html
			systemctl  restart   httpd
		2、客户端访问时需要修改：
			vim  /etc/hosts
			192.168.4.7 server0.example.com  www0.example.com  webapp0.example.com webapp.example.com
			:wq
			curl    server0.example.com
			curl    www0.example.com
			curl    webapp0.example.com
			curl    webapp.example.com



			
			