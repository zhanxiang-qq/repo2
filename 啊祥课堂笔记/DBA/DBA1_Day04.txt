1、数据完全备份与恢复
	1）数据备份策略
		完全备份：备份所有数据
		增量备份：备份上次备份后，所有新产生的数据
		差异备份：备份完全备份后，所有新产生的数据

	2）数据备份方式
		物理备份：cp、tar、... ...
		逻辑备份：mysqldump	##备份命令

	3）物理备份与恢复
		备份操作：
			cp  -r  /var/lib/mysql   备份目录/mysql.bak
			tar  -zcvf  /root/mysql.tar.gz  /var/lib/mysql/*
		
		恢复操作：
			cp  -r  备份目录/mysql.bak   /var/lib/mysql
			tar  -xvf  /root/mysql.tar.gz  -C  /var/lib/mysql/
			chowm  -R  mysql:mysql  /var/lib/mysql

	4）逻辑备份与恢复
		完全备份：
			mysqldump  -uroot  -p密码  库名  >  目录/xx.sql
			
		完全恢复：
			mysql  -uroot  -p密码   [库名]   <  目录/xx.sql

		库名展示方式：
			--all-databases  或  -A	##所有库
			-B  数据库1  数据库2		##多个库
			数据库名			##单个库
			数据库名  表名		##单张表
			数据库名  表名  表名...	##多张表

		4.50上操作：
			mysqldump -uroot -p123456 -A > /mybak/allbak.sql
			mysqldump -uroot -p123456 -B db1 db2 > /mybak/db1_db2_bak.sql
			mysqldump -uroot -p123456 db2  > /mybak/db2_bak.sql
			mysqldump -uroot -p123456 db1 t1 > /mybak/db1_t1_bak.sql
			mysqldump -uroot -p123456 db1 t1 t2 t3 > /mybak/db1_t1-3_bak.sql
			scp /mybak/*.sql root@192.168.4.52:/opt/

		4.52操作：
			mysql> drop  database  db2;
			mysql> create  database  db2;
			mysql> exit
			mysql  -uroot  -p123456  db2  db2  <  /opt/db2_bak.sql
			mysql> use  db2;
			mysql> show   tables;
			mysql> select   *  from  user;

			mysql> drop  database  db1;
			mysql> drop  database  db2;
			mysql> exit
			mysql  -uroot  -p123456  db2  db2  <  /opt/db1_db2_bak.sql
			mysql> use  db1;
			mysql> show   tables;
			mysql> select   *  from  t1;

			mysql> drop  table  db1.t1;
			mysql> exit
			mysql  -uroot  -p123456  db2  db2  <  /opt/db1_t1_bak.sql
			mysql> use  db1;
			mysql> show   tables;
			mysql> select   *  from  t1;

		注意事项：
			1、对所有库所有表进行备份后，备份的文件内容包含创建库的sql命令，所以在还原所有库所有表的时候，不需要指定库名
			2、对多个库进行备份后，备份的文件内容包含创建库的SQL指令，所以在还原多个库的时候，不需要指定库名
			3、对单个库、单个表或者多个表进行数据备份，备份的文件内容中不包含创建库的SQL指令，所以再还原时需要指定库名，再是，这个数据库需要已存在，如果不存在，需要手动创建出来，然后再去进行数据还原
			
			


2、binlog日志应用
	1）binlog日志介绍
		也称作 "二进制日志"
		MySQL服务日志文件的一种，记录除查询之外的所有SQL命令
		可用于数据备份和恢复
		配置mysql主从同步的必要条件

	2）启用日志
		server_id=数字		##指定id值（1-255）
		log_bin[=目录名/文件名]	##启用binlog日志
		max_binlog_size=数字m	##指定日志文件容量，默认1G

		vim  /etc/my.cnf
		[mysqld]
		log_bin			##启用binlog日志
		server_id=50		##指定id值
		:wq
		systemctl  restart   mysqld
		mysql  -uroot  -p密码
		show   master  status;	##查看使用的日志

	3）创建新的日志文件
		手动生成新的日志文件：
			systemctl  restart  mysqld						##重启一次，就生成一个新的日志文件
			mysql> flush  logs;							##刷新一下日志，就重新生成一个新的日志文件
			mysqldump  -uroot   -p密码  --flush-logs  备份的库名  >  备份目录/xx.sql	##备份完库后，生成一个新的日志文件

	4）清理日志
		删除指定编号之前的binlog日志文件
			mysql> purge  master  logs  to  "binlog文件名";
		
		删除所有binlgo日志，重建新日志
			mysql> reset  master;

	5）自定义日志
		vim  /etc/my.cnf
		[mysqld]
		log_bin=/mylog/db50			##启用binlog日志
		server_id=50		##指定id值
		:wq
		mkdir  /mylog
		chown  mysql  /mylog
		systemctl  restart  mysqld
	