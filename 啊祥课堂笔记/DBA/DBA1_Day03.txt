1、高级匹配条件（适用于select \ update \ delete ）
	1）模糊匹配：where  字段名  like  '通配符'
		_ 		##表示一个字符
		%		##表示0~n个字符
		例子：	select  *  from  db2.user  where  name  like  "r_o_";
			select  id,name  from  user  where  name  like  "___";
			select  id,name  from  user  where  name  like  "___%";
			select  id,name  from  user  where  name  like  "a%";
			select  id,name  from  user  where  name  like  "r%";
			select  id,name  from  user  where  name  like  "%t";
			select  id,name  from  user  where  name  like  "%a%";

	2）正则匹配：where  字段名  regexp  '正则表达式'
		^  $  .  [ ]  *  |	##正则元字符
		例子：	select  *  from  db2.user  where  name  regexp  '^j|y$';
			select  *  from  user  where  name  regexp  "^r";
			select  *  from  user  where  name  regexp  "t$";
			select  *  from  user  where  name  regexp  "^r.*t$";
			insert  into  user(name)  values("yaya6"),("123yu"),("yaya7"),("ya8ya");
			select  *  from  user  where  name  regexp  "[0-9]";
			select  *  from  user  where  name  regexp  "[a-z]";
			select  *  from  user  where  name  regexp  "root|adm";
			select  *  from  user  where  name  regexp  "^a|^r|t$";
			select  *  from  user  where  name  regexp  "[^0-9]";	##虽然对0-9取反，如果值包含了不止0-9，也会满足条件
			select  *  from  user  where  name  regexp  "[^a-z]";	##虽然对a-z取反，如果值包含了不止a-z，也会满足条件
		
	3）四则计算：字段必须是数值类型
		+	##加法
		-	##减法
		*	##乘法
		/	##除法
		%	##取余数（求模）
		( )	##提高优先级	
		select  name,uid,gid,uid+gid  别名  from  db2.user;			##求总和
		select  name,uid,gid,uid-gid  别名  from  db2.user;
		select  name,uid,gid,uid*gid  别名  from  db2.user;
		select  name,uid,gid  别名  from  db2.user  where  uid/2=0;
		select  name,uid,gid  别名  from  db2.user  where  uid%2=0;
		select  name,uid,gid  别名  from  db2.user  where  uid%2!=0;
		select  name,uid,gid,(uid+gid)/2  别名  from  db2.user;		##求平均数



2、操作查询结果	
	1）聚合函数：mysql内置数据统计函数
		avg(字段名)	##统计字段平均值
		sum(字段名)	##统计字段之和
		min(字段名)	##统计字段最小值
		max(字段名)	##统计字段最大值
		count(字段名)	##统计字段值个数
		concat(字段名1,字段名2......)	##将多个字段的值组合到一块
		select  avg(uid)  form  user;
		select  sum(uid)  form  user;
		select  max(uid)  form  user;
		select  min(uid)  form  user;
		select  count(*)  from db2.user;
		
	2）查询结果排序：sql查询  order  by  字段名  [asc|desc];		##默认为asc，升序排列
		asc	##升序排序
		desc	##降序排序
		select  name,uid  from  db2.user  where  uid>=10  and  uid<=500  order  by  uid  asc;
		select  name,uid  from  db2.user  where  uid>=10  and  uid<=500  order  by  uid  desc;		##降序排序
		
	3）查询结果分组：sql查询  group  by  字段名；
		select  shell from  db2.user  where  uid<=500  group by  shell;
		select   uid  from  db2.user  group  by  uid;

	4）查询结果去重显示：select  distinct  字段名  from  表名;
		select  distinct   shell  from  user;
		
	5）查询结果过滤：sql查询  having  条件表达式；
		select  name  from  db2.user  having  id<10;
		select  name  from  db2.user  where  id<=20  having  name="adm";
		
	6）限制查询结果显示行数：
		格式1：sql查询  limit  数字；		##显示查询结果前多少条记录
			select  name,uid,gid  from  db2.user  where  id  < 10   limit  3;

		格式2：sql查询  limit  数字1，数字2；	##显示指定范围内的查询记录（数字1：表示起始行，起始行0代表第一行，数字2表示总行数）
			select  name,uid,gid  from  db2.user  where  id  < 10   limit  3,3;



3、MySQL图形管理工具
	1）常见MySQL管理工具
		管理工具
		类型			界面	操作系统		说明
		mysql			命令行	跨平台		MySQL官方bundle包自带
		MySQL-Workbench		图形	跨平台		MySQL官方提供
		MySQL-Front		图形	Windows		开源，轻量级客户端软件
		Navicat			图形	Windows		专业、功能强大，商业版
		phpMyAdmin		浏览器	跨平台		开源，需LAMP平台

	2）配置步骤：
		部署环境LAMP或LNMP
		启动httpd服务程序
		解压phpMyAdmin包，并移动到网站目录
		配置config.inc.php，指定MySQL服务器地址
		浏览器访问、使用数据库管理员root登陆

		yum  -y  install  http  php  php-mysql
		tar  -xf  phpMyAdmin-2.11.11-all-languages.tar.gz
		mv   phpMyAdmin-2.11.11-all-languages  /var/www/html/phpmyadmin
		cd   /var/www/html/phpmyadmin/
		cp  config.sample.inc.php  config.inc.php	##创建主配置文件
		vim   config.inc.php
		$cfg['blowfish_secret'] = 'plj123';		##添加字符，给cookie做认证使用，不为空就行
		$cfg['Servers'][$i]['host'] = 'localhost';		##指定数据库服务器IP地址
		:wq	
		systemctl  start  httpd
		systemctl  enable  httpd
		systemctl  stop  firewalld
		setenforce  0
	
	3）客户端访问测试
		http:.//192.168.4.50/phpmyadmin




4、用户授权管理（上）
	1）授权grant
		授权：添加用户并设置权限及连接密码
		命令格式：
			grant  权限列表  on  库名  to  用户名@"客户端地址"
				identified  by  "密码"	
				with  grant  option;		##有授权权限，可选项

		权限列表：
			all			##所有权限
			usage			##无权限
			select,update,insert		##个别权限
			select,update(字段1,...,字段N)	##指定字段

		库名：
			*.*		##所有库所有表
			库名.*		##某一个库
			库名.表名		##某个库的某一张表

		用户名：
			授权时自定义，要有标识性，比如webuser
			存储在mysql库的user表中
			
		客户端地址：
			%		##所有客户端主机
			192.168.4.%	##所有4网段主机
			192.168.4.1	##单台客户端主机
			localhost		##数据库服务器本机

		相关命令：
			select  user();				##显示登陆用户名及客户端地址
			show  grants;				##用户显示自身访问权限
			show  grants  for  用户名@"客户端地址";		##管理员查看已有授权用户权限
			set  password=password("密码");		##授权用户连接后修改连接密码
			set  password  for  用户名@"客户端地址"		##管理员重置授权用户连接密码
			drop  user  用户名@"客户端i地址";		##删除授权用户（必须有管理员权限）
			flush  privileges;				##刷新用户表

	2）授权应用案例
		1、添加用户mydba，对所有库、表有完全权限，允许从任何客户端连接，密码是"123qqq...A"，并且有授权权限?	
			grant  all  on  *.*   to  mydba@"%"  identified   by  "123qqq...A"  with  grant  option;		

		2、添加admin用户，允许从192.168.4.0/24网段的主机连接，对db3库的user表有查询权限，密码是"123qqq...A"?
			grant  select,create   on  db3.user  to  admin@"192.168.4.%"  identified  by  "123qqq...A";

		3、添加admin2用户，允许从本机连接，允许对db3库的所有表有查询、更新、插入、删除记录权限，密码是"123qqq...A"？
			grant   select,update,insert,delete  on  db3.*  to  admin2@"localhost"  identified  by  "123qqq...A";

		4、允许192.168.4.0/24网段主机使用root连接数据库服务器，对所有库和所有表有完全权限，密码是"123qqq...A"？
			grant  all  on  *.*  to  root@"192.168.4.%"  identified  by  "123qqq...A";

		5、添加用户dba007，对所有库和所有表有完全权限，且有授权权限，密码为"123qqq...A"，客户端为网络中的所有主机？
			grant  all  on  *.*  to  dba007@"%"  identified  by  "123qqq...A"  with  grant  option;

		6、允许任意主机使用webuser用户连接数据库服务器，仅对webdb库有完全权限，密码为"123qqq...A"？
			grant  all  on  webdb.*  to  webuser@"%"  identified  by  "123qqq...A";


5、用户授权管理（下）
	1）授权库mysql库
		mysql库记录授权信息，主要表如下：
			user表		记录已有的授权用户及权限（all）
			db表		记录已有授权用户对数据库的访问权限
			tables_priv表	记录已有授权用户对表的访问权限
			columns_priv表	记录已有授权用户对字段的访问权限
			
			查看表记录可以获取用户权限，也可以通过更新记录修改用户权限

			use   mysql;
			show  tables;
			desc  user;
			select  user,host  from  user   where  user="admin"  and   host="192.168.4.%"\G;
			desc  tables_priv;
			select  *  from  tables_priv  where  user="admin"  and  host="192.168.4.%"\G;
			update  mysql.tables_priv set  Table_priv="Create" where user="admin"  and  host="192.168.4.%";
			flush  privileges;
			select  *  from  tables_priv  where  user="admin"  and  host="192.168.4.%"\G;
			show  grants  for  admin@"192.168.4.%";

			grant  select,update(name,uid)  on  db2.user  to  nsd01@"%"  identified  by  "123qqq...A";
			desc  columns_priv;
			select  *  columns_priv  where  user="nsd01"  and  host="%"\G;
			
			
			
			

	2）撤销授权用户权限
		命令格式：
			revoke   权限列表  on  库名.表名  from  用户名@"客户端地址";



6、root 密码管理
	1）修改密码
		操作系统管理员修改，本机数据库管理员密码：
		格式1：mysqladmin   -uroot   -p旧密码   password  "新密码" 

		格式2：mysqladmin   -uroot   -p   password  "新密码" 
		           Enter  password：旧密码

	2）破解数据库密码
		vim  /etc/my.cnf
		[mysqld]
		skip-grant-tables			##跳过授权库的验证，在登陆的时候就不用输入用户名和密码验证登陆
		:wq
		systemctl  restart   mysqld
		mysql
		desc  mysql.user;
		update  mysql.user  set  authentication_string=password("新密码")  where  user="root"  and  host="localhost";
		flush  privileges;
		exit
		vim  /etc/my.cnf
		[mysqld]
		#skip-grant-tables			##取消跳过授权库的验证
		:wq
		systemctl  restart  mysqld
		mysql  -uroot  -p新密码
		






				