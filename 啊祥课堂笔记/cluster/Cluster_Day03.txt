1、网站架构演变
	1）单机LNMP
		用户量少时使用，简单、成本低、存在单点故障
		
	2）独立数据库服务器
		解耦：一台服务器损坏，会影响所有服务，存在耦合性，所以要解耦
			将数据库分离
			PHP或JAVA代码的执行需要消耗大量CPU资源
			数据库的增删改查需要调用大量的内存资源
			将两者分离可以减轻服务器的压力

	3）高可用服务器集群
		通过Nginx、HAProxy代理服务器实现Web负载均衡集群，也可以使用LVS调度器实现Web负载均衡集群
		
	4）动静分离
		动态网站与静态网站分离

	5）数据库集群
		主从数据库、分库分表、读写分离
		共享存储


2、综合实战项目（上）
	1）整体主机列表
		物理机			真机		vmnet4（192.168.4.254/24）
		代理服务器 | DNS		proxy1		vmnet4（192.168.4.5/24）
					proxy1		vmnet2（192.168.2.5/24）
		代理服务器		proxy2		vmnet4（192.168.4.6/24）
					proxy2		vmnet2（192.168.2.6/24）
		web1服务器		web1		vmnet2（192.168.2.11/24）
		web2服务器		web2		vmnet2（192.168.2.12/24）
		web3服务器		web3		vmnet2（192.168.2.13/24）
		数据库服务器		database		vmnet2（192.168.2.21/24）
		ceph-node1		node1		vmnet2（192.168.2.31/24）
		ceph-node2		node2		vmnet2（192.168.2.32/24）
		ceph-node3		node3		vmnet2（192.168.2.33/24）

	2）部署LNP服务器
		Linux+Nginx+PHP（web1上操作）
		安装软件：
			yum  -y install gcc make  openssl-devel  pcre-devel
			tar  -xf  lnmp_soft.tar.gz
			cd  lnmp_soft
			tar  -xf  nginx-1.17.6.tar.gz
			cd  nginx-1.17.6
			./configure --with-http_ssl_module --with-http_stub_status_module
			make  &&  make  install
			yum  -y install  php  php-mysql  php-fpm
			
		修改nginx配置：
			vim   /usr/local/nginx/conf/nginx.conf
			location / {
            				root   html;
            				index index.php  index.html index.htm;
        			}

				
			location ~ \.php$ {
           				root           html;
            				fastcgi_pass   127.0.0.1:9000;
            				fastcgi_index  index.php;
            				include        fastcgi.conf;
        			}
			:wq
			/usr/local/nginx/sbin/nginx
			systemctl  start  php-fpm
			systemctl  enable  php-fpm
			systemctl  stop  firewalld
			sed  -i  '/SELINUX/s/enforcing/permissive/'  /etc/selinux/config
			setenforce  0

		使用systemd管理nginx服务：开机自启
			真机浏览器地址栏访问：www.bing.com
				搜索栏搜索：nginx  systemd
				点击第一个：选中后复制粘贴到nginx.service
			vim  /usr/lib/systemd/system/nginx.service
			[Unit]
			Description=The NGINX HTTP and reverse proxy server
			After=syslog.target network-online.target remote-fs.target nss-lookup.target
			Wants=network-online.target

			[Service]
			Type=forking
			PIDFile=/usr/local/nginx/logs/nginx.pid
			ExecStartPre=/usr/local/nginx/sbin/nginx -t
			ExecStart=/usr/local/nginx/sbin/nginx
			ExecReload=/usr/local/nginx/sbin/nginx -s reload
			ExecStop=/bin/kill -s QUIT $MAINPID
			PrivateTmp=true

			[Install]
			WantedBy=multi-user.target
			:wq
			systemctl  enable  nginx

	3）部署Mariadb数据库
		1）在database主机上安装数据库软件，并创建数据库与账户
			yum  -y  install  mariadb  mariadb-server   mariadb-devel
			systemctl  start  mariadb
			systemctl  enabled  mariadb
			mysql
			create  database  wordpress  character  set  utf8mb4;
			grant  all  on  wordpress.*  to  wordpress@"%"  identified  by  'wordpress';
			flush  privileges;
			exit
			systemctl   stop  firewalld
			sed  -i  '/SELINUX/s/enforcing/permissive/'  /etc/selinux/config
			setenforce  0
			
		2）在web1将代码上线到LNMP平台
			yum  -y install  unzip
			cd  lnmp_soft
			unzip  wordpress.zip
			cd  wordpress
			tar  -xf  wordpress-5.0.3-zh_CN.tar.gz
			cp  -r  wordpress/*  /usr/local/nginx/html/
			chown  -R  apache:apache  /usr/loca/nginx/html/

		3）初始化wordpress
			真机浏览器访问：192.168.2.11进行初始化
			数据库名：wordpress
			用户名：wordpress
			密码：wordpress
			数据库主机：192.168.2.21
			表前缀：默认
			点击提交


3、综合实战项目（中）
	1）准备ceph集群基础环境：（node1、node2、node3）
		要求：每个节点添加2块50G磁盘，一个缓存盘、一个数据盘
		          配置主机名、IP、YUM源、修改hosts解析文件、防火墙和selinux
		          node1做时间同步服务器，node2和node3与node1同步时间
		          node1创建ssh密钥，远程其他主机无需密码

	2）部署ceph集群，实现文件系统共享
		node1上操作
		安装软件包：
			yum  -y install  ceph-deploy
			for  i  in  node1  node2  node3
			do
				ssh  $i  "yum  -y  install ceph-mon  ceph-osd  ceph-mds"
			done

		初始化ceph环境，启动mon：
			mkdir  ceph-cluster
			cd  ceph-cluster
			ceph-deploy  new  node1   node2  node3
			ceph-deploy  mon  create-initial

		初始化磁盘，启动osd：
			ceph-deploy  disk  zap  node1:sdb  node1:sdc
			ceph-deploy  disk  zap  node2:sdb  node2:sdc
			ceph-deploy  disk  zap  node3:sdb  node3:sdc
			ceph-deploy  osd  create  node1:sdc:/dev/sdb
			ceph-deploy  osd  create  node2:sdc:/dev/sdb
			ceph-deploy  osd  create  node3:sdc:/dev/sdb
			ceph   -s

		启动mds，共享文件系统存储：
			ceph-deploy  mds  create  node3
			ceph  osd  pool   create  cephfs_data  64
			ceph  osd  pool   create  cephfs_metadata  64
			ceph  fs  new  myfs1  cephfs_metadata  cephfs_data

	3）web1上迁移网站数据
		备份wordpress数据：
			cd  /usr/local/nginx/html/
			tar  -zcpf  /root/html.tar.gz   ./*
			rm  -rf   /usr/local/nginx/html/*
		
		web1挂载ceph文件系统：
			node1拷贝软件包给web1
				scp /ceph/Tools/libcephfs1-10.2.2-38.el7cp.x86_64.rpm root@192.168.2.11:/root/
		
			web1上操作：
				yum   -y  install  libcephfs1-10.2.2-38.el7cp.x86_64.rpm
				vim  /etc/fstab
				192.168.2.31:6789,192.168.2.32:6789,192.168.2.33:6789:/  /usr/local/nginx/html  ceph defaults,_netdev,name=admin,secret=AQAAduhezJJGDxAAGUUOjg/J/nZ4bjyEVnigzQ==  0  0
				mount   -a
				df
				tar  -xf   /root/html.tar.gz   -C  /usr/local/nginx/html/


	4）部署web2服务器
		yum   -y  install  gcc  openssl-devel   pcre-devel
		tar  -xf  lnmp_soft.tar.gz
		cd  lnmp_soft
		tar  -xf   nginx-1.17.6.tar.gz
		cd  nginx.1.17.6
		./configure  --with-http_ssl_module  --with-http_stub_status_module
		make  &&  make install
		yum  -y  install  php  php-fpm  php-mysql
		vim  /usr/local/nginx/conf/nginx.conf
		location / {
            			root   html;
            			index index.php  index.html index.htm;
        		}	
		location ~ \.php$ {
           			root           html;
            			fastcgi_pass   127.0.0.1:9000;
            			fastcgi_index  index.php;
            			include        fastcgi.conf;
        		}
		:wq
		/usr/local/nginx/sbin/nginx
		systemctl  start  php-fpm
		systemctl  enable  php-fpm
		systemctl  stop  firewalld
		sed  -i  '/SELINUX/s/enforcing/permissive/'  /etc/selinux/config
		setenforce  0

		在web1上拷贝nginx.service文件给web2：
			scp  /usr/lib/systemd/system/nginx.service    root@192.168.2.12:/usr/lib/systemd/system/nginx.service
		
		回到web2将nginx设置为开机自启：	
			systemctl  enable  nginx
		
		在node1拷贝软件包给web2：
			scp /ceph/Tools/libcephfs1-10.2.2-38.el7cp.x86_64.rpm root@192.168.2.12:/root/
		
		回到web2安装软件包，挂载ceph文件系统存储：	
			yum  -y  install  libcephfs1-10.2.2-38.el7cp.x86_64.rpm
			vim   /etc/fstab
			192.168.2.31:6789,192.168.2.32:6789,192.168.2.33:6789:/  /usr/local/nginx/html  ceph defaults,_netdev,name=admin,secret=AQAAduhezJJGDxAAGUUOjg/J/nZ4bjyEVnigzQ==  0  0
			mount  -a
			df
			ls  /usr/local/nginx/html/


	5）部署web3服务器
		yum   -y  install  gcc  openssl-devel   pcre-devel
		tar  -xf  lnmp_soft.tar.gz
		cd  lnmp_soft
		tar  -xf   nginx-1.17.6.tar.gz
		cd  nginx.1.17.6
		./configure  --with-http_ssl_module  --with-http_stub_status_module
		make  &&  make install
		yum  -y  install  php  php-fpm  php-mysql
		vim  /usr/local/nginx/conf/nginx.conf
		location / {
            			root   html;
            			index index.php  index.html index.htm;
        		}	
		location ~ \.php$ {
           			root           html;
            			fastcgi_pass   127.0.0.1:9000;
            			fastcgi_index  index.php;
            			include        fastcgi.conf;
        		}
		:wq
		/usr/local/nginx/sbin/nginx
		systemctl  start  php-fpm
		systemctl  enable  php-fpm
		systemctl  stop  firewalld
		sed  -i  '/SELINUX/s/enforcing/permissive/'  /etc/selinux/config
		setenforce  0

		在web1上拷贝nginx.service文件给web3：
			scp  /usr/lib/systemd/system/nginx.service    root@192.168.2.13:/usr/lib/systemd/system/nginx.service
		
		回到web3将nginx设置为开机自启：	
			systemctl  enable  nginx
		
		在node1拷贝软件包给web3：
			scp /ceph/Tools/libcephfs1-10.2.2-38.el7cp.x86_64.rpm root@192.168.2.13:/root/
		
		回到web3安装软件包，挂载ceph文件系统存储：	
			yum  -y  install  libcephfs1-10.2.2-38.el7cp.x86_64.rpm
			vim   /etc/fstab
			192.168.2.31:6789,192.168.2.32:6789,192.168.2.33:6789:/  /usr/local/nginx/html  ceph defaults,_netdev,name=admin,secret=AQAAduhezJJGDxAAGUUOjg/J/nZ4bjyEVnigzQ==  0  0
			mount  -a
			df
			ls  /usr/local/nginx/html/
		

4、综合实战项目（下）
	1）部署代理服务器
		部署proxy1：
			yum   -y  install  haproxy
			vim   /etc/haproxy/haproxy.cfg
			listen  webs  *:80
    				balance     roundrobin
    				server web1 192.168.2.11:80 check
    				server web2 192.168.2.12:80 check
    				server web3 192.168.2.13:80 check
			systemctl   start   haproxy
			systemctl   enabel  haproxy
			yum  -y  install  keepalived
			vim  /etc/keepalived/keepalived.conf
			global_defs {
			   router_id  proxy1
			   vrrp_iptables
			}
			vrrp_instance VI_1 {
			   state  MASTER
			   virtual_router_id  51
			   priority  100
			   virtual_ipaddress {
			       192.168.4.80
			   }
			}
			systemctl  start  keepalived
			systemctl  enable  keepalived

		部署proxy2：
			yum   -y  install  haproxy
			vim   /etc/haproxy/haproxy.cfg
			listen  webs  *:80
    				balance     roundrobin
    				server web1 192.168.2.11:80 check
    				server web2 192.168.2.12:80 check
    				server web3 192.168.2.13:80 check
			systemctl   start   haproxy
			systemctl   enabel  haproxy
			yum  -y  install  keepalived
			vim  /etc/keepalived/keepalived.conf
			global_defs {
			   router_id  proxy2
			   vrrp_iptables
			}
			vrrp_instance VI_1 {
			   state  BACKUP
			   virtual_router_id  51
			   priority  80
			   virtual_ipaddress {
			       192.168.4.80
			   }
			}
			systemctl  start  keepalived
			systemctl  enable  keepalived

		在proxy1上搭建DNS解析：
			yum  -y install  bind  bind-chroot
			vim   /etc/named.conf
			options {
        				directory       "/var/named";
			};
			zone "wg.com" IN {
        				type master;
        				file "wg.com.zone";
			};
			:wq
			cd  /var/named
			cp  -p  named.localhost   wg.com.zone
			vim   wg.com.zone
			wg.com. NS      proxy1
			proxy1  A       192.168.4.5
			www     A       192.168.4.80
			:wq
			systemctl  start  named

		
	2）真机作为客户端访问测试
		修改C:\Windows\System32\drivers\etc\hosts
		192.168.4.80   www.wg.com

		浏览器访问：www.wg.com	
		
		
			
			
		



		