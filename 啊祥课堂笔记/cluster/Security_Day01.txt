1、Linux基本防护
	1）设置账号有效期
		使用chage工具
		chage  -d  0  用户名			##强制修改密码
		chage  -E  yyyy-mm-dd   用户名	##指定失效日志
		chage  -E  -1   用户名		##账号永不过期
		chage  -l   用户名			##查看账号密码信息
	
	2）锁定/解锁用户账号
		passwd  -l   用户名		##锁定账户
		passwd  -u  用户名		##解锁账户
		passwd  -S  用户名		##查看账户状态
		
	3）强制用户定期修改密码
		需修改 /etc/login.defs	##仅对新建的用户生效，修改完立即生效
		PASS_MAX_DAYS		##密码使用最大期限
		PASS_MIN_DAYS		##密码使用最小期限
		PASS_MIN_LEN		##密码最小长度
		PASS_WARN_AGE		##密码快过期时，提前几天提醒修改密码

	4）伪装登录提示
		需修改/etc/issue、/etc/issue.net
		分别用于本地、远程登录
		默认会提示内核、系统等版本信息
		vim  /etc/issue
		Welcome  to  Linux!
		:wq
		vim  /etc/issue.net
		Welcome  to  Linux!
		:wq
		
		测试：用vmware中的虚拟机退出后查看提示信息
	
	5）锁定/解锁保护文件
		chattr  +i  文件名		##拥有i属性的文件，将不可被修改、删除、新增
		chattr  -i   文件名		##去除文件的i属性，让文件可以修改、删除、新增
		chattr  +a  文件名		##文件仅可被追加写入内容，不可直接修改或删除
		chattr  -a  文件名		##取消文件的a属性，让文件可以修改、删除、新增
		lsattr  文件名		##查看文件的特殊属性有哪些

	6）文件系统挂载属性
		mount挂载属性
		noexec：不可执行程序
		noatime：不更新文件的访问时间
		vim   /etc/fstab
		UUID=2a76ea5d-85ca-45ab-a47f-870287a5be3a  /boot  xfs  defaults,noexec,noatime  0  0
		:wq
		mount  -o  remount  /boot
		
		测试：在/boot目录下写一个shell脚本，给脚本可执行权限后，执行脚本，无法执行

	7）程序控制
		systemctl工具
		chkconfig工具
		service工具

		chkconfig   crond  off 	##将服务设置为开机不自启
		chkconfig   crond  on	##将服务设置为开机自启
		
		service  crond  start		##开启服务
		service  crond  restart	##重启服务
		service  crond  stop		##关闭服务


2、用户切换与提权
	1）su切换用户身份
		格式1：su   -   用户名		##切换到指定用户
		格式2：su   -   用户名   -c   "命令"	##切换用户后，用该用户的身份去执行一条指令
		格式3：su   -			##不指定目录用户时，默认切换到root管理员用户		

	2）su命令安全日志
		查看/var/log/secure，记录su命令的切换记录
		cat   /var/log/secure

	3）sudo提升执行权限
		用法：sudo   提权命令
		          sudo   -l		##查看当前用户有哪些提权的权限命令

	4）修改sudo提权的方式
		visudo		##没有颜色提示
		vim  /etc/sudoers	##有颜色提示

		授权记录格式：
			vim   /etc/sudoers
			授权用户    登录的主机=(以什么身份执行)	    执行哪些命令
			jerry	ALL=(ALL)      NOPASSWD:ALL		##给jerry普通用户添加一个sudo授权，让他可以在任何主机登录，然后用任何用户的身份去执行所有的命令，并且不需要输入密码
			tom	ALL=(root)	/sbin/*,!/sbin/ifconfig  ens33		##给tom普通用户添加一个sudo授权，让他可以在任何主机登录，然后用root用户的身份去执行/sbin下的所有命令，但是唯独不能执行/sbin/ifconfig  ens33这条指令，必须输入密码验证才能执行指令

	5）sudo提权的使用情况，可以查看日志信息
		定义日志：
			vim   /etc/sudoers
			Defaults  logfile="/var/log/sudo"
			:wq
			
			cat   /var/log/sudo
		
			

3、SSH访问控制
	1）sshd基本安全配置
		配置文件/etc/ssh/sshd_config
		Port  3389			##改用非标准端口号
		ListenAddress   192.168.4.5		##指定只能远程我4.5这个IP
		PermitRootLogin  no		##禁止root用户登录
		UseDNS  no			##不解析客户机地址
		LoginGraceTime  1m		##远程时，1分钟内不输入用户名和密码，就断开连接，需要重新输入远程指令
		MaxAuthTries  3			##失败的最大次数，不是绝对的，有点看人品
	2）ssh黑白名单设置
		DenyUsers   tom			##仅禁止使用tom用户远程
		DenyUsers   tom  jerry		##仅禁止使用tom和jerry用户远程
		DenyUsers   tom@192.168.4.254	##仅禁止使用4.254用tom用户的身份远程
		AllowUsers   tom  jerry		##仅允许使用tom和jerry用户进行远程
		
	3）ssh免密码登录，传输密钥
		客户机上使用ssh-keygen生成私钥（id_rsa），公钥（id_rsa.pub），然后使用ssh-copy-id传输公钥（id_rsa.pub）给服务器，然后客户机就可以免密码登录服务器



4、加密与解密
	1）加密目的及方式
		确保数据的机密性：
			对称加密：加密/解密用同一个密钥
			非对称加密：加密/解密用不用的密钥（公钥、私钥）
		保护信息的完整性：
			基于输入的西南西生成长度较短、位数固定的散列值

	2）常见的加密算法
		对称加密：DES、AES
		非对称加密：RSA、DSA
		Hash散列：MD5、SHA

	3）使用md5sum校验工具
		md5sum  文件名
		命令   |  md5sum

	4）GPG对称加/解密
		查看GPG版本：gpg  --version
		
		基本用法：
			加密操作：--symmetric 或 -c
			解密操作：--decrypt 或 -d
			
			echo  test  >  test.txt
			gpg  -c   test.txt			##对称加密数据
			file  test.txt  test.txt.gpg		##查看文件的类型
			cat  test.txt.gpg			##加密后的数据
			gpg  -d  test.txt.gpg			##解密加密后的数据
			gpg  -d  test.txt.gpg   >  dtest.txt	##将解密后的数据导入到一个新的文件
			cat  dtest.txt

	5）GPG非对称加/解密
		创建密钥对：gpg  --gen-key
		导出公钥：gpg  -a  --export  密钥名称  >  公钥名称
		导入公钥：gpg  --import  公钥名称
		加密操作：--encrypt 或 -e
		指定目标用户：--recipient 或 -r（指定加密使用的密钥）
		解密操作：--decrypt 或 -d
		使用导入后的公钥加密数据：gpg  -e  -r  加密使用的密钥  文件名

		192.168.4.5上操作：
			mv  /dev/random   /dev/random.bak		
			ln   -s  /dev/urandom  /dev/random
			gpg   --gen-key				##设置用户信息、私钥口令
			gpg   --list-keys				##列出已有的密钥
			gpg  -a  --export  userb  >  userb.pub		##利用私钥导出公钥
			scp  userb.pub   192.168.4.6:/root/		##将公钥拷贝给4.6
		
		192.168.4.6上操作：
			gpg  --import  userb.pub			##导入公钥
			echo   123  >  abc.txt
			gpg   -e   -r  userb  abc.txt			##利用公钥对数据加密
			cat   abc.txt.gpg
			scp  abc.txt.gpg  192.168.4.5:/root/		##将加密后的数据传给4.5，然后用私钥进行解密
		
		192.168.4.5上操作：
			gpg  -d  -r  userb  abc.txt.gpg			##利用私钥解密数据
			gpg  -d  -r  userb  abc.txt.gpg  >  dabc.txt	##将解密的数据保存到一个文件中


	6）GPG签名与验证
		建立签名文件：--detach-sign 或 -b
		验证软件包签名：--verify
		
		192.168.4.5上操作：
			echo  123  >  123.txt
			gpg  -b  123.txt			##给数据用私钥进行签名
			scp   123.txt*  192.168.4.6:/root/	

		192.168.4.6上操作：
			gpg  --verify   123.txt.sig  123.txt	##验证签名

	7）删除私钥和公钥
		gpg  --delete-secret-key  userb	##删除私钥
		gpg  --delete-key  userb		##删除公钥

			


5、AIDE入侵检测
	1）安装软件包
		yum  -y  install  aide
		
	2）修改配置文件
		vim   /etc/aide.conf
		@@define DBDIR /var/lib/aide		##数据库目录
		@@define LOGDIR /var/log/aide		##日志目录
		database=file:@@{DBDIR}/aide.db.gz		##数据库检测的文件名
		database_out=file:@@{DBDIR}/aide.db.new.gz	##数据库导出后，数据库文件名
		#p		##检查权限
		#i   		##检查inode描述信息
		#n		##检查快捷连接
		#u		##检查所有者
		#g		##检查所属组
		#s		##检查大小
		#md5		##检查md5的校验值
		#sha1		##检查sha1的校验值
		#sha256		##检查sha256的校验值
		...
		DATAONLY = p+i+n+u+...+sha256		##定义一个校验项
		/abc/    DATAONLY			##调用定义的校验项，进行数据校验
		:wq

		末行模式下： 99,312s/^/#/
		命令模式下： 光标移动到99行行首，按ctrl+v，下键滑动到312行，然后按大写的 i ，再输入#，按esc
		
		在没有被攻击入侵前：根据配置文件，对数据进行检验操作
			aide   --init				##对数据进行校验后生成数据库文件
			ls   /var/lib/aide/aide.db.new.gz		##查看生成的数据库文件
			mv  /var/lib/aide/aide.db.new.gz  /tmp/		##备份数据库文件
			
		将之前备份的校验数据库文件还原：
			cp   /tmp/aide.db.new.gz  /var/lib/aide/aide.db.gz
		
		根据数据库执行入侵检测：
			mkdir   /abc
			echo  123  >  /abc/1.txt
			echo  456  >  /abc/2.txt
			aide  --check		##检测数据，没有任何变化
			vim   /abc/123.txt		##修改文件内容
			rm  -rf   /abc/2.txt		##删除一个文件
			echo  123  >  /abc/test.txt	##新增一个文件
			aide   --check		##利用入侵前备份的数据进行对比，检测数据，数据如果发生了变化，就显示详细信息
			


6、端口扫描
	1）为什么需要扫描
		检测潜在的风险
		查找可攻击目标
		收集设备/主机/系统/软件信息
		发现可利用的安全漏洞

	2）扫描的方式及工具
		Scan，主动探测
		Sniff，被动监听/嗅探
		Capture，数据包捕获（抓包）
		
	3）常见的安全分析工具
		扫描器：NMAP
		协议分析：tcpdump、WireShark

	4）NMAP简介
		一款强大的网络探测利器工具
		支持多种探测技术
		ping 扫描
		多端口扫描
		TCP/IP指纹校验
		...
		
	5）基本用法
		nmap  [扫描类型]  [选项]  <扫描目标...>
		
		常用的扫描类型：
			-sS：TCP  SYN扫描（半开）
			-sT：TCP连接扫描（全开）
			-sU：UDP扫描
			-sP：ICMP扫描，Ping
			-A：目标系统全面分析（-A是一个复合选项，相当于-O（OS检测）、-sV（版本检测）、-sC（脚本检测）traceroute跟踪、...）
			-n：不做DNS反向解析
			-p：指定某些端口进行扫描，连续的端口用 - 相连接，不连续的端口用逗号隔开
		
			nmap  192.168.4.6			##不指定扫描类型，默扫描TCP
			nmap  -sU  192.168.4.6		##指定扫描UDP
			nmap  -sS  192.168.4.6		##指定半开扫描TCP
			nmap  -sT  192.168.4.6		##指定全开扫描TCP
			nmap   -n -p  21-22  192.168.4.0/24   	##扫描指定主机是否开启FTP和SSH服务
			nmap  -n  -sP  192.168.4.0/24		##检测4.0网段的所有目标主机是否可以ping通
			nmap  -n -A  192.168.4.6		##符合扫描，检查操作系统信息、软件版本等信息

		  
		
				