1、LVS集群简介
	1）什么是集群：
		通过网络将很多服务器集中起来一起，提供一种服务，在客户端看起来就像是只有一个服务器
		任务调度是集群系统中的核心技术

	2）集群目的：
		提高性能：如天气预报、核实验模拟
		降低成本：相对于超级计算机更加便宜
		提高可扩展性：集群节点可以随时进行增加缩减
		增强可靠性：多个节点完成相同功能，避免单点失败

	3）集群分类：
		高性能计算集群（HPC）：
			通过以集群开发的并行应用程序，用于解决复杂的科学问题
		负载均衡集群（LB）：
			客户端负载再计算机集群中尽可能平均分摊
		高可用集群（HA）：
			避免单点故障，当一个系统发生故障时，可以快速迁移

	4）LVS概述：
		LVS是章文嵩博士在国防科技大学期间创建的
		LVS可以实验高可用的、可伸缩的Web、Mail、Cache和Media等网络服务
		最终目标是利用Linux操作系统和LVS集群软件实现一个高可用、高性能、低成本的服务器应用集群

	5）LVS术语：
		Director Server：调度服务器
			将负载分发到Real Server的服务器
		Real Server：真实服务器
			真正提供应用服务的服务器
		VIP：虚拟IP地址
			公布给用户访问的虚拟IP地址
		DIP：调度器连接节点服务器的IP地址
		RIP：真实IP地址
			集群节点上使用的IP地址
		CIP：客户机IP地址

	6）LVS工作模式：
		NAT：通过网络地址转换实现的虚拟服务器
			大并发访问时，调度器的性能成为瓶颈
		DR：直接使用路由技术实现虚拟服务器
			节点服务器需要配置VIP，注意MAC地址广播
		TUN：通过隧道方式实现虚拟服务器

	7）负载均衡调度算法：目前有10种算法
		常用调度算法：
			轮询：Round Robin
			加权轮询：Weighted Round Robin
			最少连接：Least Connections
			加权最少连接：Weighted Least Connections
			源地址哈希：Source Hash
			
		其他调度算法：
			基于局部性的最少连接
			带复制的基于局部性最少连接
			目标地址散列
			最短的期望的延迟
			最少队列调度

	8）Nginx 和 LVS 的工作原理区别：
		Nginx：支持4层调度和7层调度，正则表达式
			客户端发送请求给调度器，调度器收到请求后代替客户端去访问后端的web服务器，web服务器收到请求之后，处理完把结果再直接给调度器，再由调度器把结果给客户端，性能没有LVS好，功能比LVS强大
		LVS-NAT：工作在4层，也只支持4层，基于内核
			客户端发送请求给调度器，调度器收到请求后把请求转发给web服务器去处理，web服务器处理完之后，再把处理好的结果发给调度器，调度器再把结果转发给客户端，性能比Nginx好，功能比Ngxin少


2、LVS-NAT集群搭建
	1）环境准备：
		客户端：真机
		LVS调度器：192.168.4.5（vmnet4）、192.168.2.5（vmnet2）、搭建LVS-NAT，设置集群算法
		Web1：192.168.2.100（vmnet2）、安装httpd服务
		Web2：192.168.2.200（vmnet2）、安装httpd服务

	2）LVS  ipvsadm命令相关操作指令
		-A：添加虚拟服务器
		-D：删除虚拟服务器
		-E：修改虚拟服务器
		-C：清除所有配置
		-t：设置集群地址
		-s：指定负载均衡算法（rr、wrr、lc、wlc、sh、...）
		ipvsadm  -A  -t  192.168.4.5:80  -s  rr

		-a：添加真实服务器
		-e：修改真实服务器
		-d：删除真实服务器
		-r：指定真实服务器的地址
		-m：使用NAT模式，-g、-i 分别对应DR、TUN模式
		-w：为节点服务器设置权重，默认为1
		ipvsadm  -a -t 192.168.4.5:80  -r 192.168.2.100:80  -m
		ipvsadm  -a -t 192.168.4.5:80  -r 192.168.2.200:80  -m		

		ipvsadm  -Ln	##查看IPVS规则


	3）操作步骤：
	Web1：搭建Web1  httpd服务
		yum  -y  install  httpd
		echo 192.168.2.100 >  /var/www/html/index./html
		systemctl  restart   httpd
		systemctl  stop  firewalld
		setenforce  0

	Web2：搭建Web2  httpd服务
		yum  -y  install  httpd
		echo 192.168.2.200 >  /var/www/html/index./html
		systemctl  restart   httpd
		systemctl  stop  firewalld
		setenforce  0

	Proxy：配置IPVS规则，实现调度
		yum  -y  install  ipvsadm				##安装管理LVS工具
		ipvsadm  -A  -t  192.168.4.5:80  -s  rr			##添加虚拟服务器（集群地址）
		ipvsadm  -a -t 192.168.4.5:80  -r 192.168.2.100:80  -m	##给集群添加真实的服务器web1
		ipvsadm  -a -t 192.168.4.5:80  -r 192.168.2.200:80  -m	##给集群添加真实的服务器web2
		vim   /etc/sysctl.conf
		net.ipv4.ip_forward=1				##永久开启路由转发功能
		:wq
		sysctl  -p						##刷新路由转发配置
		systemctl  stop  firewalld
		setenforce  0

	Web1：配置Web1网关
		nmcli  connection  modify  ens33  ipv4.method  manual  ipv4.geteway  192.168.2.5
		nmcli  connection  up  ens33

	Web2：配置Web2网关
		nmcli  connection  modify  ens33  ipv4.method  manual  ipv4.geteway  192.168.2.5
		nmcli  connection  up  ens33

	客户端测试：真机上用浏览器访问测试
		访问：192.168.4.5
		查看是否可以进行负载均衡


3、LVS-DR集群
	1）环境准备
		客户端：真机
		LVS调度器：ens33   192.168.4.5（vmnet4）、ens33:0   192.168.4.15、搭建LVS-DR，设置集群算法
		Web1：添加一张新的网卡，配置IP为192.168.4.100（vmnet4），伪装192.168.4.15，防止地址冲突、安装httpd服务
		Web2：添加一张新的网卡，配置IP为192.168.4.200（vmnet4），伪装192.168.4.15，防止地址冲突、安装httpd服务

	2）搭建LVS-DR集群
		Proxy：配置DIP
			nmcli  connection modify  ens33  ipv4.method manual ipv4.addresses  192.168.4.5/24  connection.autoconnect yes
			nmcli  connection up  ens33

		Proxy：配置VIP
			cd /etc/sysconfig/networl-scripts/
			cp  ifcfg-ens33  ifcfg-ens33:0
			vim  ifcfg-ens33:0
			TYPE=Ethernet		##网卡类型
			BOOTPROTO=none		##配置网络参数的方式
			NAME=ens33:0		##网卡名称
			DEVICE=ens33:0		##设备名称
			ONBOOT=yes		##是否自动激活
			IPADDR=192.168.4.15	##IP地址
			PREFIX=24		##子网掩码
			:wq
			systemctl  restart  network

		Web1：搭建httpd服务器
			yum  -y  install  httpd
			echo  "192.168.4.100" > /var/www/html/index.html
			systemctl  restart  httpd
			setenforce  0
			iptables  -F
		
		Web2：搭建httpd服务器
			yum  -y  install  httpd
			echo  "192.168.4.200" > /var/www/html/index.html
			systemctl  restart  httpd
			setenforce  0
			iptables  -F
			
		Web1：配置RIP，添加一张新的网卡，选择vmnet4
			nmcli  connection modify  ens37  ipv4.method manual ipv4.addresses  192.168.4.100/24  connection.autoconnect yes
			nmcli  connection up  ens37

		Web2：配置RIP，添加一张新的网卡，选择vmnet4
			nmcli  connection modify  ens37  ipv4.method manual ipv4.addresses  192.168.4.200/24  connection.autoconnect yes
			nmcli  connection up  ens37

		Web1：配置伪装VIP 192.168.4.15，配置防止地址冲突
			cd /etc/sysconfig/networl-scripts/
			cp  ifcfg-lo  ifcfg-lo:0
			vim ifcfg-lo:0
			DEVICE=lo:0			##设备名称
			IPADDR=192.168.4.15		##IP地址
			NETMASK=255.255.255.255		##子网掩码
			NETWORK=192.168.4.15		##子网（网络位）
			BROADCAST=192.168.4.15		##广播地址
			ONBOOT=yes			##是否自动激活
			NAME=lo:0			##网卡名称
			:wq
			
			vim  /etc/sysctl.conf	
			net.ipv4.conf.all.arp_ignore=1
			net.ipv4.conf.all.arp_announce=2
			net.ipv4.conf.lo.arp_ignore=1
			net.ipv4.conf.lo.arp_announce=2
			:wq
			sysctl  -p
			systemctl  restart  network

		Web2：配置伪装VIP 192.168.4.15，配置防止地址冲突
			cd /etc/sysconfig/networl-scripts/
			cp  ifcfg-lo  ifcfg-lo:0
			vim ifcfg-lo:0
			DEVICE=lo:0			##设备名称
			IPADDR=192.168.4.15		##IP地址
			NETMASK=255.255.255.255		##子网掩码
			NETWORK=192.168.4.15		##子网（网络位）
			BROADCAST=192.168.4.15		##广播地址
			ONBOOT=yes			##是否自动激活
			NAME=lo:0			##网卡名称
			:wq
			
			vim  /etc/sysctl.conf	
			net.ipv4.conf.all.arp_ignore=1
			net.ipv4.conf.all.arp_announce=2
			net.ipv4.conf.lo.arp_ignore=1
			net.ipv4.conf.lo.arp_announce=2
			:wq
			sysctl  -p
			systemctl  restart  network

		Proxy：创建LVS-DR集群
			ipvsadm  -C
			ipvsadm  -A  -t  192.168.4.15:80  -s  rr
			ipvsadm  -a  -t  192.168.4.15:80  -r  192.168.4.100
			ipvsadm  -a  -t  192.168.4.15:80  -r  192.168.4.200
			ipvsadm  -Ln

		Proxy：开启路由转发功能
			vim   /etc/sysctl.conf
			net.ipv4.ip_forward=1
			:wq
			sysctl  -p
			iptables  -F
			setenforce  0

		客户端访问测试：真机上访问192.168.4.15进行测试


4、Keepalived高可用Web集群
	1）Keepalived概述
		实现了高可用集群
		最初为LVS设计，专门监控各个服务器节点状态
		拥有VRRP功能，防止单点功能

	2）搭建高可用web服务器
		Web1：部署Web1基础环境
			nmcli  connection modify  ens37  ipv4.method manual ipv4.addresses  192.168.4.100/24  connection.autoconnect yes
			nmcli  connection up  ens37
			yum  -y  install  httpd
			echo  "192.168.4.100" > /var/www/html/index.html
			systemctl  restart  httpd
			setenforce  0
			iptables  -F

		Web2：部署Web1基础环境
			nmcli  connection modify  ens37  ipv4.method manual ipv4.addresses  192.168.4.200/24  connection.autoconnect yes
			nmcli  connection up  ens37
			yum  -y  install  httpd
			echo  "192.168.4.200" > /var/www/html/index.html
			systemctl  restart  httpd
			setenforce  0
			iptables  -F

		Web1：安装keepalived，修改主配置文件
			yum  -y  install  keepalived
			vim   /etc/keepalived/keepalived.conf
			global_defs {
				router_id  web1		##路由ID号
				vrrp_iptables		##禁止防火墙自动设置策略，默认会拒绝所有
			}
			vrrp_instance_Vl_1 {
				state MASTER		##主服务器
				interface  ens37		##定义网络接口
				virtual_router_id  51		##主备vrid号必须一致，默认就行
				proiority  100		##主备优先级，优先级高优先获取VIP
				advert_int  1
				authentication {
					auth_type  pass
					auth_pass  1111	##主备服务器密码必须一致
				}
				virtual_ipaddress {		
					192.168.4.80	##谁是主服务器谁获得该VIP
				}
			}
			:wq
			systemctl  start  keepalived
			iptables  -F
			ip  a  s  ens37

		Web2：安装keepalived，修改主配置文件
			yum  -y  install  keepalived
			vim   /etc/keepalived/keepalived.conf
			global_defs {
				router_id  web2		##路由ID号
				vrrp_iptables		##禁止防火墙自动设置策略，默认会拒绝所有
			}
			vrrp_instance_Vl_1 {
				state BACKUP		##主服务器
				interface  ens37		##定义网络接口
				virtual_router_id  51		##主备vrid号必须一致，默认就行
				proiority  50		##主备优先级，优先级高优先获取VIP
				advert_int  1
				authentication {
					auth_type  pass
					auth_pass  1111	##主备服务器密码必须一致
				}
				virtual_ipaddress {		
					192.168.4.80	##谁是主服务器谁获得该VIP
				}
			}
			:wq
			systemctl  start  keepalived
			iptables  -F
			ip  a  s  ens37

		客户端测试：真机上访问192.168.4.80进行测试


5、Keepalived+LVS-DR
	1）环境准备：
		web1：192.168.4.100、设置伪装VIP：192.168.4.15（防止地址冲突），安装并启动httpd服务
		web1：192.168.4.200、设置伪装VIP：192.168.4.15（防止地址冲突），安装并启动httpd服务

		注意事项：需要把前面在web1和web2上开启的keepalived服务关闭
		
		lvs1：192.168.4.5（不要手动配置VIP，如果有，则删除VIP）
		lvs2：192.168.4.6（不要手动配置VIP，如果有，则删除VIP）

	2）搭建keepalived+LVS实现调度器高可用
		LVS1：安装Keepalived，修改主配置文件
			yum  -y  install  keepalived
			vim   /etc/keepalived/keepalived.conf
			global_defs {
				router_id  lvs1		##路由ID号
				vrrp_iptables		##禁止防火墙自动设置策略，默认会拒绝所有
			}
			vrrp_instance_Vl_1 {
				state MASTER		##主服务器
				interface  ens33		##定义网络接口
				virtual_router_id  51		##主备vrid号必须一致，默认就行
				proiority  100		##主备优先级，优先级高优先获取VIP
				advert_int  1
				authentication {
					auth_type  pass
					auth_pass  1111	##主备服务器密码必须一致
				}
				virtual_ipaddress {		
					192.168.4.15	##谁是主服务器谁获得该VIP
				}
			}
			virtual_server 192.168.4.15 80 {	##设置ipvsadm的VIP规则
    				lb_algo rr			##设置LVS调度算法为RR
    				lb_kind DR		##设置LVS的模式为DR
				#persistence_timout  50	##开启后，客户端在一定时间内容始终访问相同服务器
    				protocol TCP

    				real_server 192.168.4.100 80 {			##设置后端Web服务器真实IP
       					weight 1				##权重为1
        					TCP_CHECK {			##对后台真实服务器做建健康检查
            						connect_timeout 3		##超时时间3秒
            						nb_get_retry 3		##如果检查不通，就重试3次
            						delay_before_retry 3	##每隔3秒检查一次
        					}
    				}
    				real_server 192.168.4.200 80 {
        					weight 1
        					TCP_CHECK {
            						connect_timeout 3
            						nb_get_retry 3
            						delay_before_retry 3
       					 }
    				}
			}
			:wq
			systemctl  start  keepalived
			iptables  -F
			ip  a  s  ens33
			scp   /etc/keepalived/keepalived.conf  root@192.168.4.6: /etc/keepalived/

		LVS2：安装Keepalived，修改主配置文件
			yum  -y  install  keepalived
			vim   /etc/keepalived/keepalived.conf
			global_defs {
				router_id  lvs2		##路由ID号
				vrrp_iptables		##禁止防火墙自动设置策略，默认会拒绝所有
			}
			vrrp_instance_Vl_1 {
				state BACKUP		##备服务器
				interface  ens33		##定义网络接口
				virtual_router_id  51		##主备vrid号必须一致，默认就行
				proiority  80		##主备优先级，优先级高优先获取VIP
				advert_int  1
				authentication {
					auth_type  pass
					auth_pass  1111	##主备服务器密码必须一致
				}
				virtual_ipaddress {		
					192.168.4.15	##谁是主服务器谁获得该VIP
				}
			}
			virtual_server 192.168.4.15 80 {		##设置ipvsadm的VIP规则
    				lb_algo rr				##设置LVS调度算法为RR
    				lb_kind DR			##设置LVS的模式为DR
				#persistence_timout  50		##开启后，客户端在一定时间内容始终访问相同服务器
    				protocol TCP

    				real_server 192.168.4.100 80 {			##设置后端Web服务器真实IP
       					weight 1				##权重为1
        					TCP_CHECK {			##对后台真实服务器做建健康检查
            						connect_timeout 3		##超时时间3秒
            						nb_get_retry 3		##如果检查不通，就重试3次
            						delay_before_retry 3	##每隔3秒检查一次
        					}
    				}
    				real_server 192.168.4.200 80 {
        					weight 1
        					TCP_CHECK {
            						connect_timeout 3
            						nb_get_retry 3
            						delay_before_retry 3
       					 }
    				}
			}
			:wq
			systemctl  start  keepalived
			iptables  -F
			ip  a  s  ens33	

		客户段测试：真机上进行访问测试192.168.4.15


6、HAProxy代理
	1）环境需求：
		Haproxy：192.168.4.5（vmnet4）、192.168.2.5（vmnet2）、搭建Haproxy、关闭防火墙selinux
		Web1：192.168.2.100（vmnet2）、搭建httpd、关闭防火墙selinux
		Web2：192.168.2.200（vmnet2）、搭建httpd、关闭防火墙selinux

	2）搭建Haproxy集群
		web1：搭建httpd
			yum  -y  install  httpd
			echo 192.168.2.100 >  /var/www/html/index./html
			systemctl  restart   httpd
			iptables  -F
			setenforce  0

		web1：搭建httpd
			yum  -y  install  httpd
			echo 192.168.2.200 >  /var/www/html/index./html
			systemctl  restart   httpd
			iptables  -F
			setenforce  0

		Haproxy：清除之前的环境
			ipvsadm  -C
			systemctl  stop  keepalived
		
		
		Haproxy：配置负载均衡集群
			vim  /etc/haproxy/haproxy.cfg
			listen stats 0.0.0.0:80
    			balance  roundrobin
    			server web1 192.168.2.100:80 check inter 2s rise 2 fall 3 weight 2
    			server web2 192.168.2.200:80 check inter 2s rise 2 fall 3 weight 1
			:wq
			setenforce  0
			systemctl  stop  firewalld
			systemctl  start  haproxy
			
			http://192.168.4.5
			
		Haproxy：配置状态页面
			listen stats *:1080
    			stats refresh 30s
    			stats uri /stats
    			stats realm Haproxy Manager
    			stats auth admin:admin

			systemctl  restart  haproxy

			http://192.168.4.5:1080/stats

Nginx+Keepalived
Haproxy+Keepalived

		